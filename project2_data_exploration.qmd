---
title: "Bike Data Exploration"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(ggpointdensity)
```


```{r}
bike <- read.csv("SeoulBikeData.csv")
```

```{r}
bike <- bike |>
  rename("date" = "Date",
         "bike_count" = "Rented.Bike.Count",
         "hour" = "Hour",
         "temp" = "Temperature.C.",
         "humidity" = "Humidity...",
         "wind_speed" = "Wind.speed..m.s.",
         "visibility" = "Visibility..10m.",
         "dew_point_temp" = "Dew.point.temperature.C.",
         "solar_radiation" = "Solar.Radiation..MJ.m2.",
         "rainfall" = "Rainfall.mm.",
         "snowfall" = "Snowfall..cm.") |>
  mutate(date = as.Date(date, format = "%m/%d/%Y"),
         precipitation = ifelse(rainfall == 0 & snowfall == 0, 
                                "no precipitation", "precipitation"))
```


```{r}
table(bike$Seasons)
```

```{r}
table(bike$Holiday)/24
```
```{r}
table(bike$Seasons, bike$Holiday)/24
```
```{r}

#bike |> 
#  filter(rainfall > 0 | snowfall > 0)

table(bike$precipitation)
```



```{r}
bike |> 
  summarize(mean_bike_rent = mean(bike_count), 
            med_bike_rent = median(bike_count))
```

```{r}
bike |>
  group_by(Seasons) |>
   summarize(mean_bike_rent = mean(bike_count), 
             med_bike_rent = median(bike_count),
             sd_bike_rent = sd(bike_count))

```



```{r}
g <- ggplot(data = bike, aes(x = hour, y = bike_count))
g + geom_smooth() +
  labs(x = "Hour", y = "Number of Bikes Rented",
  title = "Number of Bikes Rented Across Each Hour") +
  scale_x_continuous(breaks = seq(0, 23, 1))
```

```{r}
bike_mean_per_hour <- bike |>
  group_by(hour)|>
  summarize(mean_rented = mean(bike_count))
```

```{r}
g <- ggplot(data = bike_mean_per_hour, 
            aes(x = hour, y = mean_rented))
g + geom_line() +
  labs(x = "Hour", y = "Number of Bikes Rented",
  title = "Average Number of Bikes Rented Across Each Hour")
```

```{r}
g <- ggplot(data = bike, aes(x = hour, y = bike_count))
g + geom_pointdensity() +
  labs(x = "Hour", y = "Number of Bikes Rented",
  title = "Number of Bikes Rented Across Each Hour")
```
```{r}

```


```{r}
g <- ggplot(data = bike, aes(x = hour, y = bike_count))
g + geom_smooth() +
  facet_wrap(~ Seasons) +
  labs(x = "Hour", y = "Number of Bikes Rented",
  title = "Number of Bikes Rented Across the Day Per Season")
```
```{r}
g <- ggplot(data = bike, aes(x = visibility))
g + geom_histogram(alpha = 0.5, bins = 15) +
  labs(x = "Visibility", y = "Count",
  title = "Histogram of Number of Visibility")
```


```{r}
g <- ggplot(data = bike, aes(x = bike_count))
g + geom_histogram(alpha = 0.5, aes( fill = Holiday), bins = 15) +
  labs(x = "Number of Bikes Rented", y = "Count",
  title = "Histogram of Number of Bikes Rented Between Holidays")
```

```{r}
g <- ggplot(data = bike |>
              filter(rainfall == 0), 
            aes(x = bike_count))
g + geom_histogram(alpha = 0.5, bins = 15) +
  labs(x = "Number of Bikes Rented", y = "Count",
  title = "Histogram of Number of Bikes Rented On No Rain Days")
```

```{r}
g <- ggplot(data = bike, aes(x = solar_radiation, y = bike_count))
g + geom_jitter() +
  labs(x = "Solar Radiation", y = "Number of Bikes Rented",
  title = "Number of Bikes Rented v.s Solar Raditation")
```

```{r}
g <- ggplot(data = bike, aes(x = wind_speed, y = bike_count))
g + geom_jitter() +
  labs(x = "Wind Speed", y = "Number of Bikes Rented",
  title = "Number of Bikes Rented v.s Wind Speed")
```
```{r}
g <- ggplot(data = bike, aes(x = temp, y = bike_count))
g + geom_jitter() +
  labs(x = "Temperature (C)", y = "Number of Bikes Rented",
  title = "Number of Bikes Rented v.s Temperature")
```

```{r}
g <- ggplot(data = bike, aes(x = bike_count))
g + geom_histogram(alpha = 0.5, aes( fill = precipitation), bins = 15) +
  labs(x = "Number of Bikes Rented", y = "Count",
  title = "Histogram of Number of Bikes Rented Between Precipitation")
```

```{r}
g <- ggplot(data = bike, aes(x = wind_speed, y = bike_count, 
                             color = precipitation))
g + geom_jitter() +
  labs(x = "Wind Speed", y = "Number of Bikes Rented",
  title = "Number of Bikes Rented v.s Wind Speed")
```

```{r}
bike |>
  select(rainfall, snowfall) |>
  mutate(precipitation = ifelse(rainfall < 0 & snowfall == 0, 
                                "no precipitation", "precipitation"))
```

